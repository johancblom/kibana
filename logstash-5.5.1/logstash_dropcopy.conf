input {
	file {
#		path => "/vagrant/20180426_003741.53644.log"
		path => "/vagrant/20180424_003649.59947.log"
		start_position => "beginning"
		sincedb_path => "/dev/null"
	}
}
filter {
	grok {
		match => ["message", "%{TIME:timestamp} %{GREEDYDATA: fix_session}: %{GREEDYDATA:fix_string}"]
	}
	mutate {
		gsub => [
			"fix_string", "654=.*555=\d\u0001",""
		]
	}
	if [message] =~ /35=8.*49=PULSE_DROP/ or [message] =~ /35=8.*49=FLXPLSDC/ or [message] =~ /35=8.*49=PULSEDROP/ or [message] =~ /49=PULSE_DROP.*35=8/ or [message] =~ /49=FLXPLSDC.*35=8/ or [message] =~ /49=PULSEDROP.*35=8/ {
		fix_protocol {
			fix_message => fix_string
			data_dictionary_path => "/vagrant/clientFIXDictionary.xml"
		}
       		date {
			match => ["SendingTime", "yyyyMMdd-HH:mm:ss.SSS"]
		}	
	}
#	if [fix_string] =~ /35=8.*49=CBOE.*56=CBOE_DROP2.*40015=Y/ or [fix_string] =~ /35=8.*49=BAML.*56=BAML_DROP2.*40015=Y/ or [fix_string] =~ /35=8.*49=DASH.*56=DASH_DROP2.*40015=Y/ or [fix_string] =~ /35=8.*49=MANUAL.*56=MANUAL_DROP2.*40015=Y/ {
#		fix_protocol {
#			fix_message => fix_string
#			data_dictionary_path => "/vagrant/clientFIXDictionary.xml"
#		}
#       		date {
#			match => ["SendingTime", "yyyyMMdd-HH:mm:ss.SSS"]
#		}	
#	}
#	else {
#		drop { }
#	}
}
output {
#  stdout {
#    codec => rubydebug
#  }
  elasticsearch {
   hosts => "localhost:9200"
   index => "dropcopies_fix"
 }
}
